*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="_dialogs.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS _aboutbox AS _form OF "_base.vcx" 		&& This class displays an About Application that the user can customize.
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="imgLogo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAppName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblVersion" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblTrademark" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblLicense" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="shpRectangle" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblUserName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblUserCorp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSysInfo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCopyright" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="linWhiteShadow" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="linBlackVertical" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Registry" UniqueID="" Timestamp="" />

	#INCLUDE "dialogs.h"
	*<DefinedPropArrayMethod>
		*m: getregisteredcompany		&& Stub routine to return registered owner.
		*m: getregisteredowner		&& Stub routine to return registered company.
		*p: cmsinfodir		&& Holds the path of the MSINFO.EXE program.
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .T.
	AutoCenter = .T.
	BorderStyle = 2
	Caption = "Acerca de las aplicaciones personalizadas"
	cmsinfodir = 		&& Holds the path of the MSINFO.EXE program.
	DoCreate = .T.
	FontSize = 8
	Height = 319
	MaxButton = .F.
	MinButton = .F.
	MinWidth = 1
	Name = "_aboutbox"
	Width = 374
	WindowType = 1

	ADD OBJECT 'cmdOK' AS commandbutton WITH ;
		Caption = "Aceptar", ;
		Default = .T., ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 239, ;
		Name = "cmdOK", ;
		TabIndex = 1, ;
		Top = 252, ;
		Width = 131
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdSysInfo' AS commandbutton WITH ;
		Caption = "\<Información del sistema", ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 239, ;
		Name = "cmdSysInfo", ;
		TabIndex = 2, ;
		Top = 283, ;
		Width = 131
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'imgLogo' AS image WITH ;
		BackStyle = 0, ;
		Height = 111, ;
		Left = 10, ;
		Name = "imgLogo", ;
		Stretch = 1, ;
		Top = 11, ;
		Width = 100
		*< END OBJECT: BaseClass="image" />

	ADD OBJECT 'lblAppName' AS label WITH ;
		BackStyle = 0, ;
		Caption = "Nombre de la aplicación", ;
		FontSize = 8, ;
		Height = 14, ;
		Left = 120, ;
		Name = "lblAppName", ;
		TabIndex = 1, ;
		Top = 17, ;
		Width = 233
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblCopyright' AS label WITH ;
		BackStyle = 0, ;
		Caption = "Información de copyright", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 120, ;
		Name = "lblCopyright", ;
		TabIndex = 3, ;
		Top = 55, ;
		Width = 233
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblLicense' AS label WITH ;
		BackStyle = 0, ;
		Caption = "Se autoriza el uso de este producto a:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 120, ;
		Name = "lblLicense", ;
		TabIndex = 4, ;
		Top = 152, ;
		Width = 234
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblTrademark' AS label WITH ;
		BackStyle = 0, ;
		Caption = "Información de marca registrada", ;
		FontBold = .F., ;
		FontSize = 8, ;
		Height = 19, ;
		Left = 120, ;
		Name = "lblTrademark", ;
		TabIndex = 3, ;
		Top = 75, ;
		Width = 233
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblUserCorp' AS label WITH ;
		BackStyle = 0, ;
		Caption = "Organización", ;
		FontBold = .F., ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 130, ;
		Name = "lblUserCorp", ;
		TabIndex = 6, ;
		Top = 202, ;
		Width = 205
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblUserName' AS label WITH ;
		BackStyle = 0, ;
		Caption = "Nombre de usuario", ;
		FontBold = .F., ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 130, ;
		Name = "lblUserName", ;
		TabIndex = 5, ;
		Top = 181, ;
		Width = 205
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblVersion' AS label WITH ;
		BackStyle = 0, ;
		Caption = "Nº de versión", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 120, ;
		Name = "lblVersion", ;
		TabIndex = 2, ;
		Top = 35, ;
		Width = 233
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'linBlackVertical' AS line WITH ;
		BorderColor = 0,0,0, ;
		Height = 0, ;
		Left = 0, ;
		Name = "linBlackVertical", ;
		Top = 240, ;
		Width = 376
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'linWhiteShadow' AS line WITH ;
		BorderColor = 255,255,255, ;
		BorderStyle = 1, ;
		BorderWidth = 2, ;
		Height = 1, ;
		Left = 1, ;
		Name = "linWhiteShadow", ;
		Top = 241, ;
		Width = 375
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'Registry' AS registry WITH ;
		Height = 17, ;
		Left = 24, ;
		Name = "Registry", ;
		Top = 276, ;
		Width = 36
		*< END OBJECT: ClassLib="registry.vcx" BaseClass="custom" />

	ADD OBJECT 'shpRectangle' AS shape WITH ;
		Height = 60, ;
		Left = 119, ;
		Name = "shpRectangle", ;
		SpecialEffect = 0, ;
		Top = 169, ;
		Width = 252
		*< END OBJECT: BaseClass="shape" />
	
	PROCEDURE Activate
		SET MESSAGE TO THISFORM.CAPTION
	ENDPROC

	PROCEDURE getregisteredcompany		&& Stub routine to return registered owner.
		RETURN THISFORM.LBLUSERCORP.CAPTION
	ENDPROC

	PROCEDURE getregisteredowner		&& Stub routine to return registered company.
		RETURN THISFORM.LBLUSERNAME.CAPTION
	ENDPROC

	PROCEDURE Init
		LPARAMETERS TCAPPNAME, TCVERSION, TCCOPYRIGHT, TCTRADEMARK, TCLOGOBMP
		LOCAL LNERROR, LCMSINFO
		IF TYPE("tcAppName")="C"
		THISFORM.CAPTION = "Acerca de "+ALLTRIM(TCAPPNAME)
		THISFORM.LBLAPPNAME.CAPTION = ALLTRIM(TCAPPNAME)
		ENDIF
		IF TYPE("tcVersion")="C"
		THISFORM.LBLVERSION.CAPTION = "Versión "+ALLTRIM(TCVERSION)
		ENDIF
		IF TYPE("tcCopyright")="C"
		THISFORM.LBLCOPYRIGHT.CAPTION = ALLTRIM(TCCOPYRIGHT)
		ENDIF
		IF TYPE("tcTrademark")="C"
		THISFORM.LBLTRADEMARK.CAPTION = TCTRADEMARK
		THISFORM.LBLTRADEMARK.WORDWRAP = 1
		ENDIF
		IF TYPE("tcLogoBMP")="C"
		THISFORM.IMGLOGO.PICTURE = TCLOGOBMP
		ENDIF
		THISFORM.LBLUSERNAME.CAPTION = THIS.GETREGISTEREDOWNER()
		THISFORM.LBLUSERCORP.CAPTION = THIS.GETREGISTEREDCOMPANY()
		LCMSINFO = ""
		LNERROR = THIS.REGISTRY.GETREGKEY("Path", @LCMSINFO, "Software\Microsoft\Shared Tools\MSInfo", -2147483646)
		IF LNERROR=0
		THISFORM.CMSINFODIR = LCMSINFO
		ENDIF
		IF EMPTY(THISFORM.CMSINFODIR)
		THISFORM.CMSINFODIR = " "
		THISFORM.CMDSYSINFO.ENABLED = .F.
		THISFORM.HEIGHT = 282
		ENDIF
	ENDPROC

	PROCEDURE Unload
		SET MESSAGE TO
	ENDPROC

	PROCEDURE cmdOK.Click
		RELEASE THISFORM
	ENDPROC

	PROCEDURE cmdSysInfo.Click
		LOCAL LCMSINFOWINDIR
		LCMSINFOWINDIR = THISFORM.CMSINFODIR
		RUN/N1 &LCMSINFOWINDIR
	ENDPROC

ENDDEFINE

DEFINE CLASS _dialog AS _form OF "_base.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	#INCLUDE "dialogs.h"
	*<DefinedPropArrayMethod>
		*m: setfont		&& Routine to automatically set font for large vs small fonts.
		*p: llargefont
		*p: lobjectupdated
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .T.
	AutoCenter = .T.
	BorderStyle = 2
	Caption = "Diálogo"
	DataSession = 2
	DoCreate = .T.
	FontName = "MS Sans Serif"
	FontSize = 8
	Height = 172
	KeyPreview = .T.
	MaxButton = .F.
	MinButton = .F.
	Name = "_dialog"
	ShowTips = .T.
	Width = 358
	WindowType = 1
	
	PROCEDURE Activate
		ACTIVATE SCREEN
		SET MESSAGE TO
	ENDPROC

	PROCEDURE Deactivate
		ACTIVATE SCREEN
		SET MESSAGE TO
	ENDPROC

	PROCEDURE Init
		SET TALK OFF
		SET COMPATIBLE FOXPLUS
		SET CONFIRM ON
		SET EXACT OFF
		SET EXCLUSIVE OFF
		SET MEMOWIDTH TO 1024
		SET MULTILOCKS ON
		SET SAFETY OFF
		WAIT CLEAR
		THIS.SETFONT
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS NKEYCODE, NSHIFTALTCTRL
		IF NKEYCODE=27
		THIS.RELEASE
		ENDIF
	ENDPROC

	PROCEDURE QueryUnload
		THIS.ENABLED = .F.
		THIS.VISIBLE = .F.
	ENDPROC

	PROCEDURE Release
		THIS.QUERYUNLOAD
	ENDPROC

	PROCEDURE setfont		&& Routine to automatically set font for large vs small fonts.
		IF FONTMETRIC(1, "MS Sans Serif", 8, "")<>13 .OR. FONTMETRIC(4, "MS Sans Serif", 8, "")<>2 .OR. FONTMETRIC(6, "MS Sans Serif", 8, "")<>5 .OR. FONTMETRIC(7, "MS Sans Serif", 8, "")<>11
		THIS.LLARGEFONT = .T.
		THIS.SETALL("FontName", "Arial")
		RETURN
		ENDIF
	ENDPROC

ENDDEFINE

DEFINE CLASS _keywords AS _dialog OF "_dialogs.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtKeyword" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdRemove" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdAdd" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdScratch" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdEnter" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntSuperMover" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="linRule1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="linRule2" UniqueID="" Timestamp="" />

	#INCLUDE "dialogs.h"
	*<DefinedPropArrayMethod>
		*m: apply		&& Retrieves the list of keywords.
		*m: initialize
		*p: cdbfname		&& The Keywords DBF name.
		*p: ckeywords		&& List of selected keywords.
		*p: clastvalue
		*p: laddmode
		*p: lupdated
		*p: okeywords		&& Object to retrieve list of keywords set to cKeywords property.
	*</DefinedPropArrayMethod>

	Caption = "Palabras clave"
	cdbfname = (HOME()+"Gallery\KEYWORDS.DBF")		&& The Keywords DBF name.
	ckeywords = 		&& List of selected keywords.
	clastvalue = 
	DoCreate = .T.
	Height = 223
	HelpContextID = 189582656
	Name = "_keywords"
	Width = 403

	ADD OBJECT 'cmdAdd' AS commandbutton WITH ;
		Caption = "\<Agregar", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 8, ;
		Name = "cmdAdd", ;
		TabIndex = 2, ;
		Top = 157, ;
		Width = 75
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdCancel' AS commandbutton WITH ;
		Cancel = .T., ;
		Caption = "Cancelar", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 320, ;
		Name = "cmdCancel", ;
		TabIndex = 8, ;
		Top = 188, ;
		Width = 75
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdEnter' AS commandbutton WITH ;
		Caption = "", ;
		Enabled = .F., ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		ForeColor = 0,128,0, ;
		Height = 23, ;
		Left = 202, ;
		Name = "cmdEnter", ;
		Picture = graphics\_save.bmp, ;
		TabIndex = 5, ;
		Top = 157, ;
		Width = 22
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS commandbutton WITH ;
		Caption = "Aceptar", ;
		Default = .T., ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 240, ;
		Name = "cmdOK", ;
		TabIndex = 7, ;
		Top = 188, ;
		Width = 75
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdRemove' AS commandbutton WITH ;
		Caption = "\<Quitar", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 89, ;
		Name = "cmdRemove", ;
		TabIndex = 3, ;
		Top = 157, ;
		Width = 75
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdScratch' AS commandbutton WITH ;
		Caption = "", ;
		Enabled = .F., ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		ForeColor = 128,0,0, ;
		Height = 23, ;
		Left = 180, ;
		Name = "cmdScratch", ;
		Picture = graphics\_cancel.bmp, ;
		TabIndex = 4, ;
		Top = 157, ;
		Width = 22
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cntSuperMover' AS _supermover WITH ;
		Height = 125, ;
		Left = 8, ;
		Name = "cntSuperMover", ;
		TabIndex = 1, ;
		Top = 12, ;
		Width = 387, ;
		cmdAdd.FontName = "MS Sans Serif", ;
		cmdAdd.FontSize = 8, ;
		cmdAdd.Left = 182, ;
		cmdAdd.Name = "cmdAdd", ;
		cmdAdd.Top = 24, ;
		cmdAddAll.FontName = "MS Sans Serif", ;
		cmdAddAll.FontSize = 8, ;
		cmdAddAll.Left = 182, ;
		cmdAddAll.Name = "cmdAddAll", ;
		cmdAddAll.Top = 47, ;
		cmdRemove.FontName = "MS Sans Serif", ;
		cmdRemove.FontSize = 8, ;
		cmdRemove.Left = 182, ;
		cmdRemove.Name = "cmdRemove", ;
		cmdRemove.Top = 70, ;
		cmdRemoveAll.FontName = "MS Sans Serif", ;
		cmdRemoveAll.FontSize = 8, ;
		cmdRemoveAll.Left = 182, ;
		cmdRemoveAll.Name = "cmdRemoveAll", ;
		cmdRemoveAll.Top = 93, ;
		LABEL1.AutoSize = .T., ;
		LABEL1.Caption = "Palabras clave \<disponibles:", ;
		LABEL1.FontName = "MS Sans Serif", ;
		LABEL1.FontSize = 8, ;
		LABEL1.Left = 0, ;
		LABEL1.Name = "LABEL1", ;
		LABEL1.Top = 0, ;
		LABEL2.AutoSize = .T., ;
		LABEL2.Caption = "Palabras clave \<seleccionadas:", ;
		LABEL2.FontName = "MS Sans Serif", ;
		LABEL2.FontSize = 8, ;
		LABEL2.Left = 219, ;
		LABEL2.Name = "LABEL2", ;
		LABEL2.Top = 0, ;
		lstLeft.FontName = "MS Sans Serif", ;
		lstLeft.FontSize = 8, ;
		lstLeft.Height = 109, ;
		lstLeft.Left = 0, ;
		lstLeft.Name = "lstLeft", ;
		lstLeft.Top = 15, ;
		lstLeft.Width = 168, ;
		lstRight.FontName = "MS Sans Serif", ;
		lstRight.FontSize = 8, ;
		lstRight.Height = 109, ;
		lstRight.Left = 219, ;
		lstRight.Name = "lstRight", ;
		lstRight.Top = 15, ;
		lstRight.Width = 168
		*< END OBJECT: ClassLib="_movers.vcx" BaseClass="container" />

	ADD OBJECT 'linRule1' AS line WITH ;
		Height = 0, ;
		Left = 8, ;
		Name = "linRule1", ;
		Top = 146, ;
		Width = 388
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'linRule2' AS line WITH ;
		BorderColor = 255,255,255, ;
		Height = 0, ;
		Left = 8, ;
		Name = "linRule2", ;
		Top = 147, ;
		Width = 388
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'txtKeyword' AS textbox WITH ;
		Enabled = .F., ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Format = "K", ;
		Height = 23, ;
		InputMask = (REPLICATE("X",30)), ;
		Left = 227, ;
		Name = "txtKeyword", ;
		TabIndex = 6, ;
		Top = 157, ;
		Width = 168
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE apply		&& Retrieves the list of keywords.
		LOCAL LNKEYWORDCOUNT, LNCOUNT, LCKEYWORD, LCKEYWORDS
		DIMENSION LAKEYWORDS[1]
		THIS.HIDE
		WITH THIS.CNTSUPERMOVER
		IF THIS.LUPDATED
		SET MESSAGE TO "Actualizando palabras clave"+" ..."
		LNKEYWORDCOUNT = ALEN(.ACHOICES)
		DIMENSION LAKEYWORDS[LNKEYWORDCOUNT]
		LAKEYWORDS = ""
		ACOPY(.ACHOICES, LAKEYWORDS)
		FOR LNCOUNT = 1 TO ALEN(.ASELECTIONS, 1)
		LCKEYWORD = .ASELECTIONS(LNCOUNT, 1)
		IF EMPTY(LCKEYWORD)
		LOOP
		ENDIF
		LNKEYWORDCOUNT = LNKEYWORDCOUNT+1
		DIMENSION LAKEYWORDS[LNKEYWORDCOUNT]
		LAKEYWORDS[LNKEYWORDCOUNT] = ALLTRIM(LCKEYWORD)
		ENDFOR
		ASORT(LAKEYWORDS)
		SELECT KEYWORDS
		REPLACE KEYWORD WITH "" ALL
		DELETE ALL
		LOCATE
		FOR LNCOUNT = 1 TO ALEN(LAKEYWORDS)
		LCKEYWORD = ALLTRIM(LAKEYWORDS(LNCOUNT))
		IF LNCOUNT>RECCOUNT()
		APPEND BLANK
		ELSE
		GOTO LNCOUNT
		ENDIF
		REPLACE KEYWORD WITH LCKEYWORD
		RECALL
		ENDFOR
		SELECT 0
		SET MESSAGE TO
		ENDIF
		LNKEYWORDCOUNT = ALEN(.ASELECTIONS, 1)
		IF LNKEYWORDCOUNT=0 .OR. EMPTY(.ASELECTIONS(1, 1))
		THIS.RELEASE
		RETURN
		ENDIF
		LCKEYWORDS = ""
		FOR LNCOUNT = 1 TO LNKEYWORDCOUNT
		LCKEYWORDS = ALLTRIM(LCKEYWORDS+" "+ALLTRIM(.ASELECTIONS(LNCOUNT, 1)))
		ENDFOR
		ENDWITH
		THIS.CKEYWORDS = LCKEYWORDS
		THIS.RELEASE
	ENDPROC

	PROCEDURE Init
		IF  .NOT. DODEFAULT() .OR.  .NOT. THIS.INITIALIZE()
		RETURN .F.
		ENDIF
	ENDPROC

	PROCEDURE initialize
		LOCAL LNCOUNT
		LOCAL LAKEYWORDS[1]
		IF EMPTY(THIS.CDBFNAME) .OR.  .NOT. FILE(THIS.CDBFNAME)
		RETURN .F.
		ENDIF
		USE SHARED (THIS.CDBFNAME) AGAIN ALIAS "keywords"
		IF EMPTY(ALIAS())
		RETURN .F.
		ENDIF
		DIMENSION LAKEYWORDS[1]
		LAKEYWORDS = ""
		SELECT KEYWORDS
		LNCOUNT = 0
		SCAN ALL FOR  .NOT. DELETED()
		LNCOUNT = LNCOUNT+1
		DIMENSION LAKEYWORDS[LNCOUNT]
		LAKEYWORDS[LNCOUNT] = ALLTRIM(KEYWORD)
		ENDSCAN
		THIS.CNTSUPERMOVER.INITCHOICES(@LAKEYWORDS)
	ENDPROC

	PROCEDURE QueryUnload
		IF  .NOT. DODEFAULT()
		RETURN .F.
		ENDIF
		THIS.RELEASE()
	ENDPROC

	PROCEDURE Release
		DODEFAULT()
		IF VARTYPE(THIS.OKEYWORDS)="O"
		THIS.OKEYWORDS.ADDPROPERTY("cKeywords", THIS.CKEYWORDS)
		ENDIF
	ENDPROC

	PROCEDURE Unload
		RETURN THIS.CKEYWORDS
	ENDPROC

	PROCEDURE cmdAdd.Click
		THISFORM.LADDMODE = .T.
		THISFORM.CLASTVALUE = ""
		WITH THIS.PARENT.TXTKEYWORD
		.VALUE = ""
		.ENABLED = .T.
		.REFRESH
		.INTERACTIVECHANGE
		.SETFOCUS
		ENDWITH
	ENDPROC

	PROCEDURE cmdCancel.Click
		THISFORM.RELEASE
	ENDPROC

	PROCEDURE cmdEnter.Click
		LOCAL LCVALUE, LLADDMODE, LNLISTINDEX, LNITEMID, LNCOUNT, LNMATCHCOUNT
		LCVALUE = ALLTRIM(THIS.PARENT.TXTKEYWORD.VALUE)
		LLADDMODE = THISFORM.LADDMODE
		THIS.PARENT.CMDADD.ENABLED = .T.
		THIS.PARENT.CMDREMOVE.ENABLED = .T.
		IF EMPTY(LCVALUE) .OR. ( .NOT. LLADDMODE .AND. LOWER(LCVALUE)==LOWER(THISFORM.CLASTVALUE))
		THIS.PARENT.CMDSCRATCH.ENABLED = .F.
		THISFORM.LADDMODE = .F.
		THISFORM.LUPDATED = .T.
		THIS.ENABLED = .F.
		WITH THIS.PARENT.CNTSUPERMOVER.LSTLEFT
		.REFRESH
		.SETFOCUS
		ENDWITH
		RETURN
		ENDIF
		IF  .NOT. EMPTY(LCVALUE)
		IF " "$LCVALUE
		MESSAGEBOX("Las palabras clave no pueden contener espacios"+".", 16, THISFORM.CAPTION)
		THIS.PARENT.TXTKEYWORD.SETFOCUS
		RETURN .F.
		ENDIF
		LNMATCHCOUNT = 0
		WITH THIS.PARENT.CNTSUPERMOVER
		FOR LNCOUNT = 1 TO ALEN(.ACHOICES)
		IF LOWER(.ACHOICES(LNCOUNT))==LOWER(LCVALUE)
		LNMATCHCOUNT = LNMATCHCOUNT+1
		ENDIF
		ENDFOR
		ENDWITH
		ENDIF
		IF LNMATCHCOUNT>0
		MESSAGEBOX("Palabra clave"+' "'+LCVALUE+'" '+"ya existe"+".", 16, THISFORM.CAPTION)
		THIS.PARENT.TXTKEYWORD.SETFOCUS
		RETURN .F.
		ENDIF
		WITH THIS.PARENT.CNTSUPERMOVER
		LNLISTINDEX = .LSTLEFT.LISTINDEX
		IF LLADDMODE
		LNLISTINDEX = ALEN(.ACHOICES)+1
		LNITEMID = LNLISTINDEX
		DIMENSION .ACHOICES[LNLISTINDEX]
		.ACHOICES[LNITEMID] = LCVALUE
		ELSE
		LNITEMID = .LSTLEFT.INDEXTOITEMID(LNLISTINDEX)
		.ACHOICES[LNITEMID] = LCVALUE
		ENDIF
		ASORT(.ACHOICES)
		.LSTLEFT.REFRESH
		LNLISTINDEX = -1
		FOR LNCOUNT = 1 TO ALEN(.ACHOICES)
		IF LOWER(.ACHOICES(LNCOUNT))==LOWER(LCVALUE)
		LNLISTINDEX = LNCOUNT
		EXIT
		ENDIF
		ENDFOR
		.LSTLEFT.LISTINDEX = LNLISTINDEX
		.LSTLEFT.TOPINDEX = LNLISTINDEX
		.LSTLEFT.SETFOCUS
		ENDWITH
		THISFORM.LADDMODE = .F.
		THISFORM.LUPDATED = .T.
		THIS.PARENT.CMDSCRATCH.ENABLED = .F.
		THIS.ENABLED = .F.
		WITH THIS.PARENT.CNTSUPERMOVER.LSTLEFT
		.REFRESH
		.SETFOCUS
		ENDWITH
	ENDPROC

	PROCEDURE cmdOK.Click
		THISFORM.APPLY
	ENDPROC

	PROCEDURE cmdRemove.Click
		LOCAL LCVALUE, LNLISTINDEX, LNITEMID, LNKEYWORDCOUNT
		LNLISTINDEX = THIS.PARENT.CNTSUPERMOVER.LSTLEFT.LISTINDEX
		IF LNLISTINDEX<1
		RETURN
		ENDIF
		LCVALUE = THIS.PARENT.CNTSUPERMOVER.LSTLEFT.VALUE
		IF MESSAGEBOX("Quitar palabra clave"+' "'+LCVALUE+'"?', 292, THISFORM.CAPTION)<>6
		RETURN
		ENDIF
		THISFORM.LUPDATED = .T.
		WITH THIS.PARENT.CNTSUPERMOVER
		LNITEMID = .LSTLEFT.INDEXTOITEMID(LNLISTINDEX)
		LNKEYWORDCOUNT = ALEN(.ACHOICES)
		IF LNKEYWORDCOUNT>=2
		ADEL(.ACHOICES, LNITEMID)
		DIMENSION .ACHOICES[LNKEYWORDCOUNT-1]
		ELSE
		DIMENSION .ACHOICES[1]
		.ACHOICES = ""
		ENDIF
		.LSTLEFT.REFRESH
		.LSTLEFT.SETFOCUS
		ENDWITH
	ENDPROC

	PROCEDURE cmdScratch.Click
		THIS.PARENT.CMDENTER.ENABLED = .F.
		THIS.ENABLED = .F.
		THISFORM.LADDMODE = .F.
		THIS.PARENT.CMDADD.ENABLED = .T.
		THIS.PARENT.CMDREMOVE.ENABLED = .T.
		WITH THIS.PARENT.CNTSUPERMOVER.LSTLEFT
		.REFRESH
		.SETFOCUS
		ENDWITH
	ENDPROC

	PROCEDURE cntSuperMover.lstLeft.InteractiveChange
		DODEFAULT()
		THIS.REFRESH
	ENDPROC

	PROCEDURE cntSuperMover.lstLeft.Refresh
		LOCAL LCVALUE
		DODEFAULT()
		THISFORM.LADDMODE = .F.
		LCVALUE = IIF(THIS.LISTINDEX>=1, ALLTRIM(THIS.VALUE), "")
		IF THIS.LISTCOUNT<1 .OR. EMPTY(LCVALUE)
		THIS.LISTINDEX = -1
		ENDIF
		THISFORM.CLASTVALUE = LCVALUE
		WITH THIS.PARENT.PARENT.TXTKEYWORD
		.VALUE = LCVALUE
		.ENABLED = ( .NOT. EMPTY(LCVALUE))
		ENDWITH
	ENDPROC

	PROCEDURE txtKeyword.InteractiveChange
		IF THIS.PARENT.CMDADD.ENABLED
		THIS.PARENT.CMDADD.ENABLED = .F.
		ENDIF
		IF THIS.PARENT.CMDREMOVE.ENABLED
		THIS.PARENT.CMDREMOVE.ENABLED = .F.
		ENDIF
		IF  .NOT. THIS.PARENT.CMDSCRATCH.ENABLED
		THIS.PARENT.CMDSCRATCH.ENABLED = .T.
		ENDIF
		IF  .NOT. THIS.PARENT.CMDENTER.ENABLED
		THIS.PARENT.CMDENTER.ENABLED = .T.
		ENDIF
	ENDPROC

	PROCEDURE txtKeyword.LostFocus
		THIS.PARENT.CMDADD.ENABLED = .T.
		THIS.PARENT.CMDREMOVE.ENABLED = .T.
	ENDPROC

ENDDEFINE

DEFINE CLASS _locateitem AS _dialog OF "_dialogs.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cmdLocate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdIgnore" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdHelp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtMessage" UniqueID="" Timestamp="" />

	#INCLUDE "dialogs.h"
	*<DefinedPropArrayMethod>
		*p: cdefaultfilename		&& The default file name to locate.
		*p: cfilename		&& The file name retrieved from Locate button.
		*p: lgetpicture
		*p: olocateitem		&& Object reference to obtain return value set to cFileName property.
	*</DefinedPropArrayMethod>

	Caption = "Buscar elemento"
	cdefaultfilename = .NULL.		&& The default file name to locate.
	cfilename = .NULL.		&& The file name retrieved from Locate button.
	DoCreate = .T.
	Height = 94
	HelpContextID = 189582662
	Name = "_locateitem"
	Width = 334

	ADD OBJECT 'cmdCancel' AS commandbutton WITH ;
		Cancel = .T., ;
		Caption = "Cancelar", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 170, ;
		Name = "cmdCancel", ;
		TabIndex = 4, ;
		Top = 63, ;
		Width = 75
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdHelp' AS commandbutton WITH ;
		Cancel = .T., ;
		Caption = "\<Ayuda", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 251, ;
		Name = "cmdHelp", ;
		TabIndex = 5, ;
		Top = 63, ;
		Width = 75
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdIgnore' AS commandbutton WITH ;
		Cancel = .T., ;
		Caption = "\<Pasar por alto", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 89, ;
		Name = "cmdIgnore", ;
		TabIndex = 3, ;
		Top = 63, ;
		Width = 75
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdLocate' AS commandbutton WITH ;
		Caption = "\<Buscar...", ;
		Default = .T., ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 8, ;
		Name = "cmdLocate", ;
		TabIndex = 2, ;
		Top = 63, ;
		Width = 75
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'edtMessage' AS editbox WITH ;
		BackColor = (thisform.BackColor), ;
		BackStyle = 0, ;
		BorderColor = (thisform.BackColor), ;
		BorderStyle = 0, ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 45, ;
		Left = 8, ;
		Name = "edtMessage", ;
		ReadOnly = .T., ;
		ScrollBars = 0, ;
		SpecialEffect = 1, ;
		TabIndex = 1, ;
		TabStop = .F., ;
		Top = 8, ;
		Width = 317
		*< END OBJECT: BaseClass="editbox" />
	
	PROCEDURE Init
		LPARAMETERS OSOURCE, TCFILENAME, TLGETPICTURE
		IF VARTYPE(OSOURCE)="O"
		THIS.OLOCATEITEM = OSOURCE
		ENDIF
		IF VARTYPE(TCFILENAME)<>"C" .OR. EMPTY(TCFILENAME)
		RETURN .F.
		ENDIF
		THIS.CDEFAULTFILENAME = LOWER(ALLTRIM(TCFILENAME))
		THIS.LGETPICTURE = TLGETPICTURE
		THIS.EDTMESSAGE.VALUE = 'Error al abrir "'+THIS.CDEFAULTFILENAME+'".  No se encontró el archivo.'
		RETURN DODEFAULT()
	ENDPROC

	PROCEDURE QueryUnload
		IF  .NOT. DODEFAULT()
		RETURN .F.
		ENDIF
		THIS.RELEASE()
	ENDPROC

	PROCEDURE Release
		DODEFAULT()
		IF VARTYPE(THIS.OLOCATEITEM)="O"
		THIS.OLOCATEITEM.ADDPROPERTY("cFileName", THIS.CFILENAME)
		ENDIF
	ENDPROC

	PROCEDURE Unload
		RETURN THISFORM.CFILENAME
	ENDPROC

	PROCEDURE cmdCancel.Click
		THISFORM.CFILENAME = .NULL.
		THISFORM.RELEASE
	ENDPROC

	PROCEDURE cmdHelp.Click
		HELP ID (THISFORM.HELPCONTEXTID) NOWAIT
	ENDPROC

	PROCEDURE cmdIgnore.Click
		THISFORM.CFILENAME = THISFORM.CDEFAULTFILENAME
		THISFORM.RELEASE
	ENDPROC

	PROCEDURE cmdLocate.Click
		LOCAL LCFILENAME, LCFILEEXT
		THISFORM.ENABLED = .F.
		THISFORM.VISIBLE = .F.
		LCFILEEXT = JUSTEXT(THISFORM.CDEFAULTFILENAME)
		IF THISFORM.LGETPICTURE .OR. INLIST(LOWER(LCFILEEXT), "bmp", "ico", "gif", "jpg", "cur", "msk")
		LCFILENAME = LOWER(GETPICT(LCFILEEXT))
		ELSE
		LCFILENAME = LOWER(GETFILE(LCFILEEXT))
		ENDIF
		IF EMPTY(LCFILENAME)
		THISFORM.CFILENAME = THISFORM.CDEFAULTFILENAME
		ELSE
		THISFORM.CFILENAME = LCFILENAME
		ENDIF
		THISFORM.RELEASE
	ENDPROC

ENDDEFINE

DEFINE CLASS _login AS _form OF "_base.vcx" 		&& Base login container. Allows entry of name and password.
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" ClassIcon="..\bitmaps\login_s.bmp" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cmdOk" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPswd" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPassword" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboName" UniqueID="" Timestamp="" />

	#INCLUDE "dialogs.h"
	*<DefinedPropArrayMethod>
		*m: checkpassword		&& Routine to validate password.
		*m: processpassword		&& Stub routine to add encryption routine.
		*m: setup		&& Routine to setup lookup dropdown.
		*p: cdbfname		&& Name of Login lookup DBF.
		*p: cfieldname		&& Name of field that holds user name.
		*p: cpassword		&& Name of field that hold user password.
		*p: ctable		&& Name of table alias that hold user information.
		*p: ctagname		&& Tag name used to search the employee table for the user name.
		*p: lcasesensitive		&& Whether password is case-sensitive.
		*p: lvalidpassword		&& Whether valid password was passed.
		*p: opassword		&& Object reference for returning valid password set to lValidPassword property.
	*</DefinedPropArrayMethod>

	AutoCenter = .T.
	Caption = "Inicio de sesión"
	cfieldname = 		&& Name of field that holds user name.
	cpassword = 		&& Name of field that hold user password.
	ctable = 		&& Name of table alias that hold user information.
	ctagname = 		&& Tag name used to search the employee table for the user name.
	DataSession = 2
	DoCreate = .T.
	Height = 131
	HelpContextID = 10
	Name = "_login"
	opassword = 		&& Object reference for returning valid password set to lValidPassword property.
	ScaleMode = 3
	Width = 224

	ADD OBJECT 'cboName' AS combobox WITH ;
		BoundColumn = 2, ;
		Height = 21, ;
		Left = 100, ;
		Name = "cboName", ;
		RowSource = "", ;
		RowSourceType = 3, ;
		Style = 2, ;
		TabIndex = 1, ;
		Top = 15, ;
		Width = 106
		*< END OBJECT: BaseClass="combobox" />

	ADD OBJECT 'cmdCancel' AS commandbutton WITH ;
		Cancel = .T., ;
		Caption = "Cancelar", ;
		Enabled = .T., ;
		Height = 26, ;
		Left = 130, ;
		Name = "cmdCancel", ;
		TabIndex = 4, ;
		Top = 90, ;
		Width = 60
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdOk' AS commandbutton WITH ;
		Caption = "Aceptar", ;
		Default = .T., ;
		Height = 26, ;
		Left = 50, ;
		Name = "cmdOk", ;
		TabIndex = 3, ;
		Top = 90, ;
		Width = 60
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'lblName' AS label WITH ;
		Alignment = 1, ;
		Caption = "Nombre", ;
		Height = 17, ;
		Left = 9, ;
		Name = "lblName", ;
		TabIndex = 5, ;
		Top = 18, ;
		Width = 87
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblPswd' AS label WITH ;
		Alignment = 1, ;
		Caption = "Contraseña", ;
		FontSize = 9, ;
		Height = 17, ;
		Left = 9, ;
		Name = "lblPswd", ;
		TabIndex = 6, ;
		Top = 50, ;
		Width = 87
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'txtPassword' AS textbox WITH ;
		Format = "K", ;
		Height = 24, ;
		Left = 99, ;
		Name = "txtPassword", ;
		PasswordChar = "*", ;
		TabIndex = 2, ;
		Top = 46, ;
		Width = 104
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE checkpassword		&& Routine to validate password.
		LOCAL LCFIELD, LCPASSFIELD
		IF EMPTY(THIS.CPASSWORD)
		RETURN .T.
		ENDIF
		SELECT (THIS.CTABLE)
		LCPASSFIELD = ALLTRIM(EVALUATE(THIS.CPASSWORD))
		LCFIELD = ALLTRIM(THIS.TXTPASSWORD.VALUE)
		LCFIELD = THIS.PROCESSPASSWORD(LCFIELD)
		DO CASE
		CASE THIS.LCASESENSITIVE .AND. LCPASSFIELD==LCFIELD
		RETURN .T.
		CASE UPPER(LCPASSFIELD)==UPPER(LCFIELD)
		RETURN .T.
		ENDCASE
		RETURN .F.
	ENDPROC

	PROCEDURE Init
		IF EMPTY(THIS.CFIELDNAME) .OR. EMPTY(THIS.CTABLE)
		RETURN
		ENDIF
		RETURN THIS.SETUP()
	ENDPROC

	PROCEDURE processpassword		&& Stub routine to add encryption routine.
		LPARAMETERS TCPASSWORD
		RETURN TCPASSWORD
	ENDPROC

	PROCEDURE QueryUnload
		IF  .NOT. DODEFAULT()
		RETURN .F.
		ENDIF
		THIS.RELEASE()
	ENDPROC

	PROCEDURE Refresh
		LOCAL LCFIELDVALUE
		IF EMPTY(THIS.CTABLE)
		RETURN
		ENDIF
		SELECT (THIS.CTABLE)
		LCFIELDVALUE = UPPER(ALLTRIM(THIS.CBONAME.DISPLAYVALUE))
		LOCATE FOR UPPER(ALLTRIM(EVALUATE(THIS.CFIELDNAME)))==LCFIELDVALUE
	ENDPROC

	PROCEDURE Release
		DODEFAULT()
		IF VARTYPE(THIS.OPASSWORD)="O"
		THIS.OPASSWORD.ADDPROPERTY("lValidPassword", THIS.LVALIDPASSWORD)
		ENDIF
	ENDPROC

	PROCEDURE setup		&& Routine to setup lookup dropdown.
		IF  .NOT. USED(THIS.CTABLE)
		IF FILE(THIS.CDBFNAME)
		USE SHARED (THIS.CDBFNAME) AGAIN ALIAS (THIS.CTABLE) IN 0
		IF EMPTY(ALIAS())
		MESSAGEBOX("No se pudo abrir la tabla de contraseñas.", 48)
		RETURN .F.
		ENDIF
		ENDIF
		SELECT (THIS.CTABLE)
		ENDIF
		THIS.CBONAME.ROWSOURCE = "SELECT "+THIS.CFIELDNAME+" FROM "+THIS.CTABLE+" ORDER BY "+THIS.CFIELDNAME+" INTO CURSOR cNames"
		THIS.CBONAME.REQUERY()
		GOTO TOP
		IF _TALLY>0
		THIS.CBONAME.LISTINDEX = 1
		ELSE
		MESSAGEBOX("No hay usuarios en el archivo.", 48)
		RETURN .F.
		ENDIF
	ENDPROC

	PROCEDURE Unload
		IF USED("cNames")
		USE IN CNAMES
		ENDIF
		IF  .NOT. EMPTY(THIS.CTABLE) .AND. USED(THIS.CTABLE)
		USE IN (THIS.CTABLE)
		ENDIF
	ENDPROC

	PROCEDURE cboName.InteractiveChange
		THISFORM.REFRESH()
	ENDPROC

	PROCEDURE cmdCancel.Click
		THISFORM.RELEASE()
	ENDPROC

	PROCEDURE cmdOk.Click
		IF THISFORM.CHECKPASSWORD()
		THISFORM.LVALIDPASSWORD = .T.
		THISFORM.RELEASE()
		ELSE
		MESSAGEBOX("La contraseña no es válida.", 48)
		THISFORM.TXTPASSWORD.VALUE = ""
		THISFORM.TXTPASSWORD.SETFOCUS()
		ENDIF
	ENDPROC

ENDDEFINE

DEFINE CLASS _msgbox AS _custom OF "_base.vcx" 		&& Message box wrapper for MESSAGEBOX().
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: display
		*m: set		&& Sets the properties for message, type, title, and beep.
		*m: show		&& Displays the message box and returns the dialog result.
		*p: cmessage		&& Message box message text.
		*p: ctitle		&& Message box title text.
		*p: lbeep		&& Specifies whether a beep occurs when message box is activated.
		*p: ntype		&& Message box type.
	*</DefinedPropArrayMethod>

	builderx = (HOME()+"Wizards\BuilderD,BuilderDForm")
	cmessage = 		&& Message box message text.
	ctitle = (_screen.Caption)		&& Message box title text.
	Height = 23
	Name = "_msgbox"
	ntype = 48		&& Message box type.
	Width = 24
	
	PROTECTED PROCEDURE display
		RETURN MESSAGEBOX(THIS.CMESSAGE, THIS.NTYPE, THIS.CTITLE)
	ENDPROC

	PROCEDURE Init
		LPARAMETERS TCMESSAGE, TNTYPE, TCTITLE, TLBEEP
		THIS.SET(TCMESSAGE, TNTYPE, TCTITLE, TLBEEP, PARAMETERS())
	ENDPROC

	PROCEDURE set		&& Sets the properties for message, type, title, and beep.
		LPARAMETERS TCMESSAGE, TNTYPE, TCTITLE, TLBEEP, TNPARAMETERS
		LOCAL LNPARAMETERS
		LNPARAMETERS = IIF(TYPE("tnParameters")=="N", TNPARAMETERS, PARAMETERS())
		IF LNPARAMETERS<1
		RETURN
		ENDIF
		IF TYPE("tcMessage")=="C"
		THIS.CMESSAGE = TCMESSAGE
		ENDIF
		IF LNPARAMETERS<2
		RETURN
		ENDIF
		IF TYPE("tnType")=="N"
		THIS.NTYPE = TNTYPE
		ENDIF
		IF LNPARAMETERS<3
		RETURN
		ENDIF
		IF TYPE("tcTitle")=="C"
		THIS.CTITLE = TCTITLE
		ENDIF
		IF LNPARAMETERS<4
		RETURN
		ENDIF
		IF TYPE("tlBeep")=="L"
		THIS.LBEEP = TLBEEP
		ENDIF
	ENDPROC

	PROCEDURE show		&& Displays the message box and returns the dialog result.
		LPARAMETERS TCMESSAGE, TNTYPE, TCTITLE, TLBEEP
		THIS.SET(TCMESSAGE, TNTYPE, TCTITLE, TLBEEP, PARAMETERS())
		IF THIS.LBEEP
		?? CHR(7)
		ENDIF
		RETURN THIS.DISPLAY()
	ENDPROC

ENDDEFINE

DEFINE CLASS _splash AS _form OF "_base.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Label1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: nduration		&& This is duration in seconds to display splash screen.
	*</DefinedPropArrayMethod>

	AutoCenter = .T.
	BorderStyle = 2
	Caption = ""
	Closable = .F.
	ControlBox = .F.
	DoCreate = .T.
	Height = 250
	MaxButton = .F.
	MinButton = .F.
	Movable = .F.
	Name = "_splash"
	nduration = 3		&& This is duration in seconds to display splash screen.
	Width = 375

	ADD OBJECT 'Label1' AS label WITH ;
		BackStyle = 0, ;
		Caption = "Pantalla de presentación", ;
		FontBold = .T., ;
		FontSize = 22, ;
		Height = 40, ;
		Left = 18, ;
		Name = "Label1", ;
		Top = 192, ;
		Width = 349
		*< END OBJECT: BaseClass="label" />
	
	PROCEDURE Activate
		THIS.PICTURE = THIS.PICTURE
		LOCAL T1
		T1 = SECONDS()
		DO WHILE (SECONDS()-M.T1)<THIS.NDURATION
		ENDDO
		THISFORM.RELEASE
	ENDPROC

ENDDEFINE
